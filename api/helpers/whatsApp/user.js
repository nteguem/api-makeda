const { menuData } = require("../../data");
const logger = require('../logger');
const { sendMessageToNumber } = require('./whatsappMessaging');
const { kycPersonCommander } = require('./kyc-person');
const { kycEnterpriseCommander } = require('./kyc-enterprise');
const {kycPersonCollectiveCommander} = require("./kyc-person-collective");
const {kycEnterpriseCollectiveCommander} = require("./kyc-enterprise-collective");
const { listAccounts } = require("../../services/account.service");
const { GainSimulationCommander } = require("./simulator")
let Steps = {};

const UserCommander = async (user, msg, client) => {
  try {
    const Menu = menuData(user.data.pseudo, user.exist);
    const listAccount = (await listAccounts(null, user.data.phoneNumber)).accounts;
    if (!('participant' in msg.id)) {
      if (!Steps[msg.from]) {
        Steps[msg.from] = {};
        Steps[msg.from]["currentMenu"] = "mainMenu";
        Steps[msg.from]["isSubMenu"] = true;
      }
      const currentMenu = Steps[msg.from]["currentMenu"];
      switch (currentMenu) {
        case "mainMenu":
          switch (msg.body) {
            case "1":
              msg.reply(`*Leadership en Gestion d'Actifs: Votre R√©ussite, Notre Priorit√©*\n\nCr√©√©e en 2021, *MAKEDA Asset Management* est une Soci√©t√© Anonyme de droit camerounais agr√©√©e par la COSUMAF ( Commission de Surveillance du March√© Financier de l‚ÄôAfrique Centrale) dans la sous-R√©gion CEMAC ( Cameroun, Congo, Gabon, RCA, Gabon et Guin√©e Equatoriale).\n\nNous adoptons une approche holistique en gestion de portefeuille, align√©e sur vos objectifs et valeurs, pour vous aider √† atteindre un avenir financier durable et responsable. Nous cr√©eons des v√©hicules transparents et s√©curis√©s afin de financer l'√©conomie r√©elle via l'accompagnement des pays de la CEMAC dans la r√©alisation des diff√©rents projets √©nerg√©tiques, d'adduction d'eau, √©ducationnels, routiers, agro-alimentaires, etc. Dans le but de les rendre totalement autonomes.\n\n _Tapez # pour revenir au menu principal_`);
              Steps[msg.from]["currentMenu"] = "storyMenu";
              Steps[msg.from]["isSubMenu"] = false;
              break;
            case "2":
              msg.reply(`*Services de Gestion d'Actifs par MAKEDA Asset Management* :\n\n1. *Gestion sous Mandat* :\nVous poss√©dez un patrimoine financier et pr√©f√©rez d√©l√©guer sa gestion? Optez pour notre Service de Gestion Sous Mandat.\n- Gestion bas√©e sur votre sensibilit√© au risque\n- Un large univers d'investissement\n- Support client 24/7\n\n2. *Gestion Collective* :\nNous cr√©ons des fonds d'investissement pour agr√©ger les capitaux des investisseurs individuels ou institutionnels en vue de construire des portefeuilles d'investissement offrant une diversification optimale. Ex. OPCVM (FCP, SICAV).\n- √âvaluation des besoins\n- Cr√©ation de v√©hicule d'investissement\n- Gestion et suivi des performances du v√©hicule d'investissement\n\n3. *Conseil Financier* :\nLa mission de Makeda est de fournir des solutions innovantes et un service de conseil exceptionnel √† ses clients.\n- D√©finition des objectifs\n- Planification financi√®re et Strat√©gie de financement\n\n_Tapez # pour revenir au menu principal_`);
              Steps[msg.from]["currentMenu"] = "serviceMenu";
              Steps[msg.from]["isSubMenu"] = false;
              break;
            case "3":
              msg.reply(`‚ö†  _La r√©glementation fait obligation aux interm√©diaires financiers de collecter des informations sur la situation patrimoniale et financi√®re de l‚Äôinvestisseur et sa connaissance en mati√®re de produits financiers conform√©ment aux r√®glement N¬∞01/CEMAC/UMAC/CM du 11 avril 2016_\n\n *Veuillez noter que la cr√©ation du compte peut prendre jusqu'√† 7 minutes.* \n\nüìã Choisir le service pour lequel vous voulez ouvrir un compte :\n\n1. Gestion sous Mandat, tapez 1.\n2. Gestion Collective, tapez 2.\n3. Conseil Financier, tapez 3.\n\n_Tapez # pour revenir au menu principal_`);
              Steps[msg.from]["isSubMenu"] = true;
              Steps[msg.from]["currentMenu"] = "accountMenu";
              break;
            case "4":
              msg.reply(`Parrainage :\nPartagez votre code de parrainage unique pour permettre √† d'autres de cr√©er un compte sous votre parrainage chez MAKEDA Asset Management.\nEn tant que parrain, vous b√©n√©ficiez √©galement d'avantages.\n\nVotre code de parrainage : ${user.data.referralCode}\n\n_Tapez # pour revenir au menu principal_`);
              Steps[msg.from]["isSubMenu"] = false;
              Steps[msg.from]["currentMenu"] = "referralMenu";
              break;
            case "5":
              Steps[msg.from]["isSubMenu"] = true;
              msg.reply(`üìã *Veuillez saisir votre m√©thode de versement*.\n\n 1-Versement p√©riodique,Tapez 1\n 2-Versement unique,Tapez 2\n\n _Tapez # pour revenir au menu principal_`);
              Steps[msg.from]["currentMenu"] = "simulateGainMenu";
              break;
            case "6":
              let result = '*Voici la liste des comptes que vous avez cr√©√©(s)* : \n\n';
              let count = 1;
              listAccount.forEach(item => {
                if (item.accountType === 'personne_morale') {
                  result += `${count}. ${item.socialName} (personne morale)\n`;
                } else if (item.accountType === 'personne_physique') {
                  result += `${count}. ${item.name} ${item.firstName} (personne physique)\n`;
                }
                count++;
              });
              const content = listAccount.length == 0 ? `Vous n'avez pas encore souscrit √† un service. Pour le faire, tapez 3 dans le menu principal.` : result;
              msg.reply(`${content} \n\n_Tapez # pour revenir au menu principal_`);
              Steps[msg.from]["isSubMenu"] = false;
              Steps[msg.from]["currentMenu"] = "myAccountMenu";
              break;
            case "7":
                Steps[msg.from]["isSubMenu"] = true;
                msg.reply(`üìã *Cliquez sur ce lien pour effectuer un versement\n\n _Tapez # pour revenir au menu principal_`);
                Steps[msg.from]["currentMenu"] = "versementMenu";
                break;
            case "#":
              Steps[msg.from]["currentMenu"] = "mainMenu";
              Steps[msg.from]["isSubMenu"] = true;
              msg.reply(Menu);
              break;
            default:
              if (typeof Steps[msg.from]["addAccount"] == 'undefined') {
                msg.reply(`Veuillez choisir un menu valide ci-dessus`);
              }
              await sendMessageToNumber(client, user.data.phoneNumber, Menu);
          }
          break;

        case "accountMenu":
          if (!Steps[msg.from]["addAccount"]) {
            Steps[msg.from]["addAccount"] = {};
            Steps[msg.from]["stepCreate"] = 0;
          }
          switch (msg.body) {
            case "1":
              Steps[msg.from]["addAccount"]["service"] = "Gestion sous Mandat";
              await sendMessageToNumber(client, user.data.phoneNumber, "Gestion sur mesure avec conditions d√©finies dans le cadre d‚Äôun mandat de gestion avec vous.\n Caract√©ristiques :\n - Signature de la convention de gestion\n - Capital minimum : 100 Millions de XAF\n - Rendement escompt√© : A n√©gocier\n - Performance : A n√©gocier\n - Horizon de placement minimum : 3 ans\n - March√© cibl√© : March√© mon√©taire, March√© financier et March√© hors cote\n\nüìã *Vous √™tes* : \n 1-Personne physique , Tapez 1 \n 2-Personne morale , Tapez 2");
              Steps[msg.from]["currentMenu"] = "accountTypeMenu";
              break;
            case "2":
              Steps[msg.from]["addAccount"]["service"] = "Gestion Collective";
              await sendMessageToNumber(client, user.data.phoneNumber, "Gestion mutualis√©e √† travers des organismes de placement collectif, Cr√©ation des v√©hicules d'investissement \n *Avantages pour le souscripteur:*\n - Diversification du portefeuille\n - Rendement Optimal\n - Optimisation fiscale\n - Construction du capital pour un projet\n - Planification des √âtudes des enfants\n - la flexibilit√© du titre ( liquidit√© : vous pouvez entrer et sortir √† tout moment)\n - Gestion assur√©e par des Professionnels de la Finance\n - La transparence de l'information et la possibilit√© de participer √† des march√©s financiers auxquels vous n'aurait pas acc√®s individuellement\n - la transmission du patrimoine\n\nüìã *Vous √™tes* : \n 1-Personne physique , Tapez 1 \n 2-Personne morale , Tapez 2");
              Steps[msg.from]["currentMenu"] = "accountTypeMenu";
              break;
            case "3":
              Steps[msg.from]["addAccount"]["service"] = "Conseil Financier";
              await sendMessageToNumber(client, user.data.phoneNumber, "üìã *Vous √™tes* : \n 1-Personne physique , Tapez 1 \n 2-Personne morale , Tapez 2");
              Steps[msg.from]["currentMenu"] = "accountTypeMenu";
              break;
            case "#":
              Steps[msg.from]["currentMenu"] = "mainMenu";
              Steps[msg.from]["isSubMenu"] = true;
              msg.reply(Menu);
              break;
            default:
              if (Steps[msg.from]["isSubMenu"]) {
                if (typeof Steps[msg.from]["addAccount"] == 'undefined') {
                  msg.reply(`Veuillez choisir un menu valide ci-dessus\n\n_Tapez # pour revenir au menu principal_`);
                }
              }
              else {
                msg.reply("Commande saisie incorrecte");
                await sendMessageToNumber(client, user.data.phoneNumber, Menu);
              }
          }
          break;

        case "accountTypeMenu":
          switch (msg.body) {
            case "1":
              (Steps[msg.from]["currentMenu"] = "personMenu");
              if(Steps[msg.from]["addAccount"]["service"] ===  "Gestion Collective")
                {
                  await sendMessageToNumber(client, user.data.phoneNumber, `√©ùóçùñ∫ùóâùñæ 1/34\n\nVeuillez saisir votre nom et pr√©nom.\n\n_ùñ≥ùñ∫ùóâùñæùóì # ùóâùóàùóéùóã ùóãùñæùóèùñæùóáùóÇùóã ùñ∫ùóé ùóÜùñæùóáùóé ùóâùóãùóÇùóáùñºùóÇùóâùñ∫ùóÖ._`);
                }
                else
                {
                  await sendMessageToNumber(client, user.data.phoneNumber, `√©ùóçùñ∫ùóâùñæ 1/29\n\nVeuillez saisir votre nom et pr√©nom.\n\n_ùñ≥ùñ∫ùóâùñæùóì # ùóâùóàùóéùóã ùóãùñæùóèùñæùóáùóÇùóã ùñ∫ùóé ùóÜùñæùóáùóé ùóâùóãùóÇùóáùñºùóÇùóâùñ∫ùóÖ._`);
                }
              break;
            case "2":
              (Steps[msg.from]["currentMenu"] = "enterpriseMenu");
              if(Steps[msg.from]["addAccount"]["service"] ===  "Gestion Collective")
                {
                  await sendMessageToNumber(client, user.data.phoneNumber, `√©ùóçùñ∫ùóâùñæ 1/32\n\nVeuillez saisir votre D√©nomination sociale.\n\n_ùñ≥ùñ∫ùóâùñæùóì # ùóâùóàùóéùóã ùóãùñæùóèùñæùóáùóÇùóã ùñ∫ùóé ùóÜùñæùóáùóé ùóâùóãùóÇùóáùñºùóÇùóâùñ∫ùóÖ._`);
                }
                else
                {
                  await sendMessageToNumber(client, user.data.phoneNumber, `√©ùóçùñ∫ùóâùñæ 1/27\n\nVeuillez saisir votre D√©nomination sociale.\n\n_ùñ≥ùñ∫ùóâùñæùóì # ùóâùóàùóéùóã ùóãùñæùóèùñæùóáùóÇùóã ùñ∫ùóé ùóÜùñæùóáùóé ùóâùóãùóÇùóáùñºùóÇùóâùñ∫ùóÖ._`);
                }
              break;
          }
          break;

        case "personMenu":
          if (msg.body == "#") {
            Steps[msg.from]["currentMenu"] = "mainMenu";
            Steps[msg.from]["isSubMenu"] = true;
            await sendMessageToNumber(client, user.data.phoneNumber, Menu);
          } else {
            if(Steps[msg.from]["addAccount"]["service"] ===  "Gestion Collective")
              {
                await kycPersonCollectiveCommander(user, msg, client, Steps[msg.from]["addAccount"]["service"]);
              }
              else
              {
                await kycPersonCommander(user, msg, client, Steps[msg.from]["addAccount"]["service"]);
              }
          }
          break;
        case "enterpriseMenu":
          if (msg.body == "#") {
            Steps[msg.from]["currentMenu"] = "mainMenu";
            Steps[msg.from]["isSubMenu"] = true;
            await sendMessageToNumber(client, user.data.phoneNumber, Menu);
          } else {
            if(Steps[msg.from]["addAccount"]["service"] ===  "Gestion Collective")
              {
                await kycEnterpriseCollectiveCommander(user, msg, client, Steps[msg.from]["addAccount"]["service"]);
              }
              else
              {
                await kycEnterpriseCommander(user, msg, client, Steps[msg.from]["addAccount"]["service"]);
              }
          }
          break;
        case "simulateGainMenu":
          if (msg.body == "#") {
            Steps[msg.from]["currentMenu"] = "mainMenu";
            Steps[msg.from]["isSubMenu"] = true;
            await sendMessageToNumber(client, user.data.phoneNumber, Menu);
          } else {
            await GainSimulationCommander(user, msg, client);
          }
          break;
        default:
          Steps[msg.from]["currentMenu"] = "mainMenu";
          Steps[msg.from]["isSubMenu"] = true;
          if (msg.body == "#") {
            await sendMessageToNumber(client, user.data.phoneNumber, Menu);
          } else {
            msg.reply("Commande saisie incorrecte");
            await sendMessageToNumber(client, user.data.phoneNumber, Menu);
          }
      }
    }
  } catch (error) {
    logger(client).error('Erreur rencontr√©e User', error);
    msg.reply(`Une erreur interne du serveur s'est produite suite √† une action de l'utilisateur : ${user.data.pseudo}. Notre √©quipe y travaille.\n\n_Tapez # pour revenir au menu principal._`);
  }
};

module.exports = {
  UserCommander
};
